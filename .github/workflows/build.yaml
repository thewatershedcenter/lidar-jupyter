name: Build & Deploy ubuntu-jupyter container
on:
  # Trigger this workflow when a PR is submitted 
  pull_request: []
  # Also trigger this workflow on any push to main.
  push:
    branches:
      - main
  # Also trigger a build and publish with new version 
  release:
    types: [created]

jobs:
  deploy-images:
    runs-on: ubuntu-latest 

    # Define registry and repository
    env:
      registry: quay.io
      username: kulpojke
      repository: lidar
    strategy:
      # Even if one docker container build fails we want the others to continue.
      fail-fast: false
      # A matrix of Dockerfile paths and associated tags
      # Dockerfile in root builds to tag latest
      matrix:
        dockerfile: [[docker-vice/Dockerfile, sha-]]
    steps:
      - name: Get short SHA
        id: shorty
        run: echo "::set-output name=sha7::$(echo ${GITHUB_SHA} | cut -c1-7)"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Container Tag Normal 
        run: |
          container="${{ env.registry }}/${{ env.username}}/${{ env.repository }}:${{ matrix.dockerfile[1] }}${{ steps.shorty.outputs.sha7 }}"
          echo "container=${container}" >> $GITHUB_ENV
          echo "versioned=${container}" >> $GITHUB_ENV
        
        # On a new release create a container with the same tag as the release.
      - name: Set Container Tag Release
        if: github.event_name == 'release'
        run: |
          versioned="${{ env.registry }}/${{ env.username}}/${{ env.repository }}:${GITHUB_REF##*/}-${{ matrix.dockerfile[1] }}${{ steps.shorty.outputs.sha7 }}"
          echo "versioned=${container}"
          echo "versioned=${versioned}" >> $GITHUB_ENV
      - name: Build ${{ matrix.dockerfile[1] }}
        run: |
          printf "Preparing to build ${{ env.container }} from ${{ matrix.dockerfile[0] }}"
          if [ ! -f "${{ matrix.dockerfile[0]}}" ]; then
              printf "Dockerfile ${{ matrix.dockerfile[0] }} does not exist"
              exit 1;
          fi
          docker build -f ${{ matrix.dockerfile[0] }} -t ${{ env.container }} -t ${{ env.versioned }} --build-arg USER_ID=$(id -u) --build-arg GROUP_ID=$(id -g) .
          docker images
      - name: Log in to quay Container Registry
        # Don't log into registry on pull request.
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.registry }}
          username: ${{ env.username }}+wrtc_robot 
          password: ${{ secrets.ROBOT_TOKEN }}

      - name: Deploy ${{ matrix.dockerfile[1] }}
        # And Don't log push the container on a pull request.
        if: github.event_name != 'pull_request'
        run: docker push ${{ env.registry }}/${{ env.username}}/${{ env.repository }} --all-tags